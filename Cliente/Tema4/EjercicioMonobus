<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge" />
		<title></title>
		<meta name="description" content="" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<link rel="stylesheet" href="" />
	</head>
	<body>
		<p id="Resultado"></p>
		<p id="Resultado2"></p>
		<p id="Resultado3"></p>
		<p id="Resultado4"></p>

		<script>
			// // Desarrolla un programa que permita modelar el
			// funcionamiento del sistema de título de abono del
			// transporte público. Para ello, parta de una clase
			// llamada Bonobus que dispondrá de un método llamado
			//  picarViaje, que recibirá como argumento un número
			//  entero indicando la línea de autobús, tres enteros para representar el día,
			//  mes y año de la fecha actual, y dos enteros para representar la hora y los
			//  minutos del momento en el que se pica el billete. Este método devolverá un valor
			//   booleano que será verdadero cuando se haya podido picar el viaje y falso cuando
			//    el bono ya no sea válido. Hay que implementar dos clases hijas de Bonobus llamadas
			//    BonoDiezViajes y BonoTarifaPlana, que representan respectivamente un bono con 10 viajes
			//    y un bono válido durante un periodo de tiempo. La clase BonoDiezViajes permitirá realizar
			//    10 viajes, tras los cuales quedará invalidado el bono. Para controlar el número de viajes
			//    restantes la clase dispondrá de un atributo privado de tipo entero para el cual se implementará
			//    sus métodos consultores y modificadores. De la clase anterior heredará otra llamada
			//    BonoDiezViajesConTrasbordo, que permitirá realizar un trasbordo durante la hora posterior a la
			//    cancelación del billete siempre que se utilice en otra línea de autobús diferente a aquélla en
			//    la que se realizó la cancelación. Esta clase deberá disponer de un atributo de tipo entero para
			//     controlar la línea del último autobús en el que se picó el último viaje, tres atributos de tipo
			//      entero para controlar la fecha de dicho viaje, y dos de tipo entero para controlar la hora. Todos
			//       estos atributos dispondrán de su correspondiente método consultor y modificador. La
			//       clase BonoTarifaPlana dispondrá de los atributos necesarios, con sus métodos consultores y
			//       modificadores, para representar la fecha en la que caduca la tarjeta. Esta clase implementará el
			//        método picarViaje de tal forma que permita realizar viajes mientras que la fecha de validez no sea
			//         anterior a la fecha actual. Heredando de la clase anterior, cree las clases necesarias para representar
			//          los bonos con validez de un día, tres días, un mes y un año. Estas clases sobrescribirán el método
			//          picarViaje de forma tal que se establezca la fecha de caducidad a partir de la primera vez que se
			//          cancele un viaje del bono, y se use la implementación de la clase padre para realizar las comprobaciones
			//          pertinentes. Desarrolle instanciaciones de todas las clases anteriormente descritas para comprobar
			//          que funcionan correctamente.

			class Productos {
				constructor(nombre, unidades, precio) {
					this.nombre = nombre;
					this.precio = precio;
					this.unidades = unidaddes;
				}

				valorEnStock() {
					let importeTotal = this.precio * this.unidaddes;

					return importeTotal;
				}

				incrementarStock(num) {
					let incremento = incremento + this.num;

					return incremento;
				}

				disminuirStock(num) {
					let disminuir = disminuir - this.num;

					return disminuir;
				}

				get nombre() {
					return this.nombre;
				}

				set nombre(nombre) {
					this.nombre = nombre;
				}
				get unidades() {
					return this.unidades;
				}

				set unidades(unidades) {
					this.unidades = unidades;
				}
				get precio() {
					return this.precio;
				}

				set precio(precio) {
					this.precio = precio;
				}
			}
		</script>
	</body>
</html>

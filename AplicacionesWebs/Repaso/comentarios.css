/*
	///////////////////////////////////////////////////////

	Transformaciones
	
	////////////////////////////////////////////////////////
*/

/*translate 
	///////////////////////////////////////////////////////

	transform:translate lo que haces es tranladar la posicion del elemento si es positivo es hacia la derecha y si es negativo es hacia la izquierda
	la x es la derecha y la y es abajo 
	
	Ejemplo transform: translate(100px, 200px);
	
	////////////////////////////////////////////////////////
	*/

/*rotate 
	///////////////////////////////////////////////////////

	transform:rotate() lo que hace es rotar un elemento y usa lo siguientes medidas angulares

	0-360 deg --> son grados
	0-400 grad -- son gradianes
	0-6 red --> son radianes
	0-1 turn --> esto son vueltas

	Ejemplo : transform: rotate(200deg);
	
	////////////////////////////////////////////////////////
	*/

/*scale 
	///////////////////////////////////////////////////////

	transform:scale() incrementa el tama침o de dicho elemento su tama침o * el numero que le pongas es lo que aumenta

	Ejemplo 

	transform: scale(.4);
	transform: scaleX(.4);
	transform: scaleY(.4);

	transform-origin: right; esto es para que empieze la transformacion desde la derecha
	
	////////////////////////////////////////////////////////
	*/

/*skew
	///////////////////////////////////////////////////////

	transform: skew(); Esto lo que hace es estirar el elemento

	Ejemplo

	transform: skew(30deg, 40deg);
	
	////////////////////////////////////////////////////////
	*/

/*
	///////////////////////////////////////////////////////

	Transicionees
	
	////////////////////////////////////////////////////////
*/

/*property
	///////////////////////////////////////////////////////

	transition-property: ; Esto lo que hace es que todas las propiedades que pongas aqui van a sufrir una transicion

	Ejemplo

	transition-property:border, box-shadow, transform;
	
	////////////////////////////////////////////////////////
*/

/*duration
	///////////////////////////////////////////////////////

	transition-duration: ; Esto se usa para la duracion de la transicion se puede con s o ms

	Ejemplo

	transition-property:background-color, transform, transform opacity;
	
	////////////////////////////////////////////////////////
*/

/*transition-timing-function
	///////////////////////////////////////////////////////

	transition-timing-function:; 

	ease --> al principio acelera y al final disminuye la velociadad
	ease-in --> comienza lento pero luego aumenta la velocidad
	sease-in-out --> una mezcla de los do
	linear --> va constante la transicion

	Ejemplo

	transition-timing-function:ease; 
	
	////////////////////////////////////////////////////////
*/

/*transition-delay
	///////////////////////////////////////////////////////

	Ejemplo

	transition-delay: 5s;	
	////////////////////////////////////////////////////////
*/

/* animation-name: rotar;
animation-duration: 3s;
animation-iteration-count: infinite; las veces que se repite
animation-direction: alternate;
animation-fill-mode esto es para que se quede al final de la animacion con el estilo que tu quieras

 Los keyframes es para decir que pasos va a seguir la animacion 
@keyframes rotar {
	0% {
		transform: rotate(0);
	}

	20% {
		transform: scale(1.5);
	}

	40% {
		transform: rotate(80deg);
	}

	100% {
		transform: scale(0);
	}
} */

/* <audio controls="controls" preload="auto">
<source src="assets/video/Dakiti.mp3" type="audio/mpg" />
</audio>
 */

/* <video muted="muted" loop="" style="max-width: 100%; height: 100%" controls>
 <source src="assets/video/Video1.mp4" type="video/mp4" />
</video> */

/* Derechos de car치cter econ칩mico:

*/

/* Derechos morales: 

*/
